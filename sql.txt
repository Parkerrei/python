RELATIONAL DATABASES MODEL DATA BY STORING ROWS AND COMLUMNS IN TABLES.THE POWER OF THE RELATIONAL DATABASE LIES IN ITES ABILITY TO EFFICIENTLY 
RETRIEVE DATA FROM THOSE TABLES AND IN PARTICULAR WHERE THERE ARE MULTIPLE TALES AND TAHE RELATIONSHIPS 
BETWEEN THOSE TABLES INVOLVED IN THE QUERY/
DATA BASE CONTAINS MANY TABLES
RELATIONAL CONTAINS TUPLES AND attributes
TUPLE OR ROW - A SET OF FIELDS THAT GENERALLY REPRESENTS AN OBJECT LIKE A PERSON OR A MUSIC TRACK
attributes(COLUMN OR FIELD) - ONE OF POSSIBLY MANY ELEMENTS OF DATA CORRESPONDING TO THE OBJECT REPRESENTED BY THE ROW
A RELATION IS DEFINED AS A SET OF TUPLES THAT HAVE THE SAME attributes.A TUPLE USUALLY REPRESENTS AN OBJECT AND INFROMATION ABOUT THAT OBJECT.
OBJECTS ARE TYPICALLY PHYSICALL OBJECTS OR CONCEPTS.A RELATION IS USUALLY DESCRIBED AS A TABLE, WHICH IS ORGANIZED  INTO ROWS AND COLUMNS.ALL THE 
DATA REFERENCED BY AN ATTIBUTE ARE INT HE SAME DOMAIN AND CONFORM TO THE SAME CONSTRAINTS.

                        SQL(STRUCTURED QUERY LANGUAGE) IS THE LANGUAGE WE USE TO ISSUE COMMANDS TO THE DATABASE.
                        1) TO CREATE A TABLE      - users(ID INTEGER PRIMARY KEY,NAME TEXT,EMAIL TEXT)
                        2) TO INSERT DATA         -   (INSERT INTO USERS(NAME,EMAIL)VALUES(ARG1,ARG2))
                        3) TO RETRIEVE SOME DATA  -   (SELCECT * FROM USERS;)
                        4) TO UPDATE DATA         -   (UPDATE Users set email = 'email',where name = 'name';)
                        5) TO DELETE DATA         -   (DELETE FROM Users WHERE name = 'args')
                        
                        WEB APPLLICATIONS W/DATABASES 

                        1) APPLICATION DEVELOPER - BUILDS THE LOGIC FOR THE APPLICATION, THE LOOK AND FEEL OF THE APPLICATION - MONITORS THE APPLICATION FOR PROBLEMS 
                        2) DATABASE ADMINISTRATOR - MONITORS AND ADJUSTS THE DATABASE AS THE PROGRAM RUNS IN PRODUCTION .
                        OF BOTH OF THESE ARE INVOLVED IN BUILDING OF THE DATA MODEL .

A DATABASE MODEL OR DATABASE SCHEMA IS THE STRUCTURE OR FORMAT OF A DATABSE, DESCRIBED IN A FORMAL LANGUAGE SUPPORTED BY THE DATABSE MANAGEMENT SYSTEM. IN 
OTHER WORDS, A DATABASE MODEL IS THE APPLICATION OF A DATA MODEL WHEN USED IN CONJUNCTION WITH A DATABASE MANAGEMENT SYSTEM.
DATABASE DESIGN IS AN ART FORMOF ITS OWN WITH PARTICULAR SKILLS AND EXPERIENCE.
DATABASE DESIGN STARTS WITH A PICTURE.

                        BUILDING A DATA MODEL 
                        1) DRAWING A PICTURE OF THE DATA OBJECTS FOR OUR APPLICATION AND THEN FIGURING OUT HOW TO REPRESENT THE OBJECTS AND THEIR 
                        RELATIONSHIPS 
                        2) BASIC RULE: DONT PUT THE SAME STRING DATA IN TWICE - USE A RELATIONSHIP INSTEAD.
                        3) WHEN THERE IS ONE THING IN THE REAL WORLD THERE SHOULD BE ONE COPY OF THAT THING IN THAT DATABASE.

                        DATABASE NORMALIZATION (3NF) 
                        1) THERE IS TONS OF DATABASE THEORY - WAY TOO MUCH TO UDNERSTAND WITHOUT EXCESSIVE PREDICATE CALCULUS 
                        2) DO NOT REPLICATE DATA - REFERENCE DATA - POINT AT DATA 
                        3) USE INTEGERS FOR KEYS AND FOR REFERENCES 
                        4) ADD A SPECIAL 'KEY' COLUMN TO EACH TABLE WHICH WE WILL MAKE REFERECES TO .BY CONVENTION , MANY PROGRAMMERS CALL THIS COLUMN 'ID'.
                                  
                        THREE KINDS OF KEYS 
                        1) PRIMARY KEY - GENERALLY AN INTEGER AUTO- INCREMENT FIELD 
                        2) LOGICAL KEY - WHAT THE OUTSIDE WORLD USESFOR LOOKUP 
                        3) FOREIGN KEY - GENERALLY AN INTEGER KEY POINTING TO A ROW IN ANOTHER TABLE 

                        KEY RULES 
                        1) NEVER USE YOUR LGICAL KEY AS THE PRIMARY KEY 
                        2) LOGICAL KEYS CAN AND DO CHANGE ,ALBEIT SLOWLY
                        3) RELATIONSHIPS THAT ARE BASED ON MATCHING STRING FIELDS ARE LESS EFFICIENT THAN INTEGERS.

                        FOREIGN KEYS 
                        A FOREIGN KEY IS WHEN A TABLE HAS A COLUMN THAT CONTAINS A KEY WHICH POINTS TO THE PRIMARY KEY OF ANOTHER TABLE .
                        WHEN ALL PRIMARY KEYS ARE INTEGERS, THEN ALL FOREIGN KEYS ARE INTEGERS - THIS IS GOOD - VERY GOOD.

IN SQL THE INSERT COMMANDS DEFINES A NEW ROW BY LISTING THE FIELDS WE WANT TO INLCUDE FOLLOWED BY

                        RELATIONAL POWER 
                    1) BY REMOVING THE REPLICATED DATA AND REPLACING IT WITH REFERENCES TO A SINGLE COPY OF EACH BIT OF DATA WE BUILD A WEB OF INFORMATION 
                    THAT THE RELATIONAL DATABASE CAN READ THROUGH VERT QUICKLY - EVEN FOR VERY LARGE AMOUNTS OF DATA .

                    2) OFTEN WHEN YOU WANT SOME DATA IT COMES FROM A NUMBER OF TABLES LINKED BY THESE FOREIGN KEYS.

                    THE JOIN OPERATION 
                    1) THE JOIN OPERATION LINKS ACROSS SEVERAL TABLES AS PART OF A SELECT OPERATION 
                    2) YOU MUST TELL THE JOIN HOW TO USE THE KEYS THAT MAKE THE CONNECTION BETWEEEN THE TABLES USING AN "ON CLAUSE"
                    3) WHEN USING JOIN CLAUSE IN SQL STATEMENT THE "ON" INDICATES HOW THE TWO TABLES ARE TO BE JOINED.
                    



api_key = lbkFJIW6DY5RoQ27O2QBpKKk1PZvpe0ADODLV0lBHLx_6X36f1G_UrmqRkX1GbECX1idlOSMEQ-2K4As